.contents {
  &__heading {
    text-align: center;
    margin-bottom: 5rem; // TODO these margins aren't quite right. They're not integers in the design.
    @include respond(tablet-land) {
      margin-bottom: 12rem;
    }
  }

  &__container {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;

    @include respond(tablet-land) {
      width: 75%;
      margin: 0 auto;
      flex-direction: row;
    }
  }

  &__image {
    width: 50vw;
    margin-bottom: 5rem;

    // TODO: Add another breakpoint
    @include respond(tablet-land) {
      width: 40vw;
      margin-bottom: 0;
    }

    img {
      width: 100%;
    }
  }

  &__text-and-button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;

    @include respond(tablet-land) {
      align-items: flex-start;
      width: fit-content;
    }
  }

  &__descriptions {
    display: grid;
    text-align: center;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    row-gap: 2rem;
    width: 100%;
    margin-bottom: 4rem;

    @include respond(tablet-land) {
      grid-template-columns: [icon-start] auto [icon-end label-start] auto [label-end];
      grid-template-rows: repeat(3, [row-start] 1fr [row-end]);
      row-gap: 10rem;
      column-gap: 3rem;
      margin-bottom: 8rem;
      text-align: left;
    }

    .item {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    @include respond(tablet-land) {
      .text-1 {
        grid-area: row-start 1 / label-start / row-end 1 / label-end;
      }

      .text-2 {
        grid-area: row-start 2 / label-start / row-end 2 / label-end;
      }

      .text-3 {
        grid-area: row-start 3 / label-start / row-end 3 / label-end;
      }

      .icon-1 {
        grid-area: row-start 1 / icon-start / row-end 1 / icon-end;
      }

      .icon-2 {
        grid-area: row-start 2 / icon-start / row-end 2 / icon-end;
      }

      .icon-3 {
        grid-area: row-start 3 / icon-start / row-end 3 / icon-end;
      }
    }

    [id^='contents-icon-'] {
      svg {
        path {
          stroke: $color-anthrazit;
        }
      }
    }
  }

  &__button {
    flex-basis: content;
  }
}
